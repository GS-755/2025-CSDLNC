CREATE TABLE TAG (
	idTag INT NOT NULL IDENTITY(1,1),
	nameTag NVARCHAR(30) NOT NULL,
	PRIMARY KEY (idTag)
)

CREATE TABLE SACH (
	idBook INT NOT NULL IDENTITY(1,1),
	nameBook NVARCHAR(100) NOT NULL,
	authorBook NVARCHAR(100) NOT NULL,
	publisherBook NVARCHAR(100) NOT NULL,
	dateBook DATE NOT NULL,
	noteBook NVARCHAR(200), 
	statusBook NVARCHAR(100) NOT NULL,
	PRIMARY KEY (idBook),
)

CREATE TABLE JOIN_LISTTAGBOOK (
	idBook INT NOT NULL,
	idTag INT NOT NULL,
	PRIMARY KEY (idBook, idTag),
	FOREIGN KEY (idBook) REFERENCES SACH(idBook),
	FOREIGN KEY (idTag) REFERENCES TAG(idTag)
)

CREATE TABLE SUUTAP (
	idCollection INT NOT NULL IDENTITY(1,1),
	nameCollection NVARCHAR(100) NOT NULL,
	descriptionCollection NVARCHAR(200) NOT NULL,
	PRIMARY KEY (idCollection)
)

CREATE TABLE JOIN_LISTCOLLECTION (
	idCollection INT NOT NULL,
	idBook INT NOT NULL,
	PRIMARY KEY (idCollection, idBook),
	FOREIGN KEY (idCollection) REFERENCES SUUTAP(idCollection),
	FOREIGN KEY (idBook) REFERENCES SACH(idBook)
)

CREATE TABLE JOIN_LISTTAGCOLLECTION (
	idCollection INT NOT NULL,
	idTag INT NOT NULL,
	PRIMARY KEY (idCollection, idTag),
	FOREIGN KEY (idCollection) REFERENCES SUUTAP(idCollection),
	FOREIGN KEY (idTag) REFERENCES TAG(idTag)
)

CREATE TABLE ACCOUNT_USER (
	idUser INT NOT NULL IDENTITY(1,1),
	nameUser NVARCHAR(100) NOT NULL,
	emailUser VARCHAR(100) NOT NULL,
	passwordUser VARCHAR(100) NOT NULL,
	phoneUser VARCHAR(100) NOT NULL,
	loginStatus BIT NOT NULL,
	PRIMARY KEY (idUser)
)

CREATE TABLE THETHUVIEN (
	idCard INT NOT NULL IDENTITY(1,1),
	nameCard NVARCHAR(100) NOT NULL,
	emailCard NVARCHAR(100) NOT NULL,
	addressCard NVARCHAR(200) NOT NULL,
	dateCard DATE NOT NULL,
	expireCard DATE NOT NULL,
	statusCard NVARCHAR(100) NOT NULL,
	borrowStatus BIT NOT NULL,
	idBorrow INT,
	PRIMARY KEY (idCard)
)

CREATE TABLE DOCGIA (
	idMember INT NOT NULL IDENTITY(1,1),
	statusMember NVARCHAR(100) NOT NULL,
	idCard INT NOT NULL,
	idUser INT NOT NULL,
	PRIMARY KEY (idMember),
	FOREIGN KEY (idCard) REFERENCES THETHUVIEN(idCard),
	FOREIGN KEY (idUser) REFERENCES ACCOUNT_USER(idUser)
)

CREATE TABLE THUTHU (
	idLibrarian INT NOT NULL IDENTITY(1,1),
	roleLibrarian NVARCHAR(30) NOT NULL,
	hireLibrarian DATE NOT NULL,
	statusLibrarian NVARCHAR(100) NOT NULL,
	idUser INT NOT NULL,
	PRIMARY KEY (idLibrarian),
	FOREIGN KEY (idUser) REFERENCES ACCOUNT_USER(idUser)
)	

CREATE TABLE MUONTRA (
	idBorrow INT NOT NULL IDENTITY(1,1),
	startDate DATE NOT NULL,
	deadlineDate DATE NOT NULL,
	statusBorrow NVARCHAR(100) NOT NULL,
	idMember INT NOT NULL,
	idLibrarian INT NOT NULL,
	PRIMARY KEY (idBorrow),
	FOREIGN KEY (idMember) REFERENCES DOCGIA(idMember),
	FOREIGN KEY (idLibrarian) REFERENCES THUTHU(idLibrarian)
)

CREATE TABLE JOIN_BOOKBORROW (
	idBorrow INT NOT NULL,
	idBook INT NOT NULL,
	PRIMARY KEY (idBorrow, idBook),
	FOREIGN KEY (idBorrow) REFERENCES MUONTRA(idBorrow),
	FOREIGN KEY (idBook) REFERENCES SACH(idBook)
)

CREATE TABLE TIENPHAT (
	idFee INT NOT NULL IDENTITY(1,1),
	requiredFee FLOAT NOT NULL,
	progressFee FLOAT NOT NULL,
	idBorrow INT NOT NULL,
	idReason INT NOT NULL,
	PRIMARY KEY (idFee),
	FOREIGN KEY (idBorrow) REFERENCES MUONTRA(idBorrow)
	FOREIGN KEY (idReason) REFERENCES TIENPHATLYDO(idReason)
)

CREATE TABLE TIENPHATLYDO (
	idReason INT NOT NULL IDENTITY(1,1),
	nameReason NVARCHAR(100) NOT NULL,
	feeReason FLOAT NOT NULL,
	PRIMARY KEY (idReason)
)

ALTER TABLE THETHUVIEN
ADD FOREIGN KEY (idBorrow) REFERENCES MUONTRA(idBorrow)




